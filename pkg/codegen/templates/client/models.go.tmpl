// Code generated by codegen. DO NOT EDIT.
// Copyright Â© 2025 OpenCHAMI a Series of LF Projects, LLC
//
// SPDX-License-Identifier: MIT
//
// This file contains client-side request/response models.
// Generated from: pkg/codegen/templates/client-models.go.tmpl
//
// To modify client models:
//   1. Edit the template file: pkg/codegen/templates/client-models.go.tmpl
//   2. Run 'make dev' to regenerate
//   3. Do NOT edit this file directly - changes will be lost
//
// DEPRECATED: This template is a legacy stub. The actual client models are
// generated in models.go.tmpl and used by both server and client.
//
// Generated request types:
//   - CreateResourceRequest: Create operation with metadata
//   - UpdateResourceRequest: Update operation with partial fields
//   - DeleteResponse: Confirmation of deletion
//
// Note: This file contains TODO comments indicating that resource-specific
// fields should be added. Consider migrating to the unified models.go.tmpl
// approach or implementing spec field embedding.
//
// To implement full spec support:
//   1. Import resource packages
//   2. Embed ResourceSpec in request structs
//   3. Use json:",inline" tag for proper serialization
//
// To add validation:
//   1. Add validate tags (e.g., validate:"required,min=3")
//   2. Use go-playground/validator in client before sending
//
package client

import (
{{range .Resources}}	"{{.Package}}"
{{end}}
)

{{range .Resources}}
// Create{{.Name}}Request represents a request to create a {{.Name}}
type Create{{.Name}}Request struct {
	{{.SpecType}} `json:",inline"`
	Name          string            `json:"name" validate:"required"`
	Labels        map[string]string `json:"labels,omitempty"`
	Annotations   map[string]string `json:"annotations,omitempty"`
}

// Update{{.Name}}Request represents a request to update a {{.Name}}
type Update{{.Name}}Request struct {
	{{.SpecType}} `json:",inline,omitempty"`
	Name          string            `json:"name,omitempty"`
	Labels        map[string]string `json:"labels,omitempty"`
	Annotations   map[string]string `json:"annotations,omitempty"`
}

{{end}}

// DeleteResponse represents a successful deletion response
type DeleteResponse struct {
	Message string `json:"message"`
	UID     string `json:"uid"`
}
