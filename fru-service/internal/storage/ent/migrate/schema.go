// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AnnotationsColumns holds the columns for the "annotations" table.
	AnnotationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "key", Type: field.TypeString, Size: 253},
		{Name: "value", Type: field.TypeString},
		{Name: "resource_annotations", Type: field.TypeInt},
	}
	// AnnotationsTable holds the schema information for the "annotations" table.
	AnnotationsTable = &schema.Table{
		Name:       "annotations",
		Columns:    AnnotationsColumns,
		PrimaryKey: []*schema.Column{AnnotationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "annotations_resources_annotations",
				Columns:    []*schema.Column{AnnotationsColumns[3]},
				RefColumns: []*schema.Column{ResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "annotation_key",
				Unique:  false,
				Columns: []*schema.Column{AnnotationsColumns[1]},
			},
		},
	}
	// LabelsColumns holds the columns for the "labels" table.
	LabelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "key", Type: field.TypeString, Size: 253},
		{Name: "value", Type: field.TypeString, Size: 63},
		{Name: "resource_labels", Type: field.TypeInt},
	}
	// LabelsTable holds the schema information for the "labels" table.
	LabelsTable = &schema.Table{
		Name:       "labels",
		Columns:    LabelsColumns,
		PrimaryKey: []*schema.Column{LabelsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "labels_resources_labels",
				Columns:    []*schema.Column{LabelsColumns[3]},
				RefColumns: []*schema.Column{ResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "label_key_value",
				Unique:  false,
				Columns: []*schema.Column{LabelsColumns[1], LabelsColumns[2]},
			},
		},
	}
	// ResourcesColumns holds the columns for the "resources" table.
	ResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uid", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Size: 253},
		{Name: "api_version", Type: field.TypeString, Default: "v1"},
		{Name: "kind", Type: field.TypeString},
		{Name: "resource_type", Type: field.TypeString},
		{Name: "spec", Type: field.TypeJSON},
		{Name: "status", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "resource_version", Type: field.TypeString, Default: "1"},
		{Name: "namespace", Type: field.TypeString, Nullable: true},
	}
	// ResourcesTable holds the schema information for the "resources" table.
	ResourcesTable = &schema.Table{
		Name:       "resources",
		Columns:    ResourcesColumns,
		PrimaryKey: []*schema.Column{ResourcesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "resource_uid",
				Unique:  true,
				Columns: []*schema.Column{ResourcesColumns[1]},
			},
			{
				Name:    "resource_resource_type_name",
				Unique:  false,
				Columns: []*schema.Column{ResourcesColumns[5], ResourcesColumns[2]},
			},
			{
				Name:    "resource_resource_type_namespace",
				Unique:  false,
				Columns: []*schema.Column{ResourcesColumns[5], ResourcesColumns[11]},
			},
			{
				Name:    "resource_kind",
				Unique:  false,
				Columns: []*schema.Column{ResourcesColumns[4]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AnnotationsTable,
		LabelsTable,
		ResourcesTable,
	}
)

func init() {
	AnnotationsTable.ForeignKeys[0].RefTable = ResourcesTable
	LabelsTable.ForeignKeys[0].RefTable = ResourcesTable
}
