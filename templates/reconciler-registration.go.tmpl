// Code generated by inventory-codegen. DO NOT EDIT.
// Copyright Â© 2025 OpenCHAMI a Series of LF Projects, LLC
//
// SPDX-License-Identifier: MIT
// This file registers all reconcilers with the reconciliation controller.
package reconcilers

import (
	"github.com/openchami/inventory/pkg/reconcile"
	"github.com/openchami/inventory/pkg/events"
)

// RegisterReconcilers registers all resource reconcilers with the controller.
//
// This is called during server startup to enable automatic reconciliation
// for all registered resource types.
//
// Parameters:
//   - controller: The reconciliation controller
//   - client: Client for accessing resource storage
//   - eventBus: Event bus for publishing events
//
// Returns:
//   - error: If registration fails
//
// Usage:
//
//	controller := reconcile.NewController(eventBus, storage)
//	if err := RegisterReconcilers(controller, client, eventBus); err != nil {
//	    log.Fatal(err)
//	}
//	controller.Start(ctx)
func RegisterReconcilers(controller *reconcile.Controller, client reconcile.ClientInterface, eventBus events.EventBus) error {
{{- range .Resources }}
	// Register {{ .Name }} reconciler
	{{ .PluralName }}Reconciler := NewDefault{{ .Name }}Reconciler(client, eventBus)
	if err := controller.RegisterReconciler({{ .PluralName }}Reconciler); err != nil {
		return err
	}
{{- end }}

	return nil
}

// GetRegisteredReconcilers returns a list of all registered reconciler names.
//
// This is useful for monitoring and debugging.
func GetRegisteredReconcilers() []string {
	return []string{
{{- range .Resources }}
		"{{ .Name }}",
{{- end }}
	}
}
