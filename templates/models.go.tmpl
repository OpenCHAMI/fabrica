// Code generated by codegen. DO NOT EDIT.
//
// This file contains request/response models for REST API operations.
// Generated from: pkg/codegen/templates/models.go.tmpl
//
// To modify request/response models:
//   1. Edit the template file: pkg/codegen/templates/models.go.tmpl
//   2. Run 'make dev' to regenerate
//   3. Do NOT edit this file directly - changes will be lost
//
// Generated models for each resource:
//   - ResourceResponse: Single resource response (alias to resource type)
//   - ResourcesResponse: List of resources with pagination info
//   - CreateResourceRequest: Create operation request body
//   - UpdateResourceRequest: Update operation request body
//   - DeleteResponse: Delete operation response
//
// Request structure:
//   - Embeds resource Spec fields inline (json:",inline")
//   - Includes metadata fields (Name, Labels, Annotations)
//   - Uses validation tags for required fields
//
// To add custom validation:
//   1. Add validation tags to template (e.g., validate:"required,email")
//   2. Implement validation middleware in handlers
//
// To add additional fields:
//   1. Modify Create/Update request structs in template
//   2. Update corresponding handlers to process new fields
//
package {{.PackageName}}

import (
	{{range .Resources}}"{{.Package}}"
	{{end}}
)

{{range .Resources}}
// {{.Name}}Response represents the response for {{.Name}} operations
type {{.Name}}Response = {{.PackageAlias}}.{{.Name}}

// Create{{.Name}}Request represents a request to create a {{.Name}}
type Create{{.Name}}Request struct {
	{{.SpecType}} `json:",inline"`
	Name          string            `json:"name" validate:"required"`
	Labels        map[string]string `json:"labels,omitempty"`
	Annotations   map[string]string `json:"annotations,omitempty"`
}

// Update{{.Name}}Request represents a request to update a {{.Name}}
type Update{{.Name}}Request struct {
	{{.SpecType}} `json:",inline,omitempty"`
	Name          string            `json:"name,omitempty"`
	Labels        map[string]string `json:"labels,omitempty"`
	Annotations   map[string]string `json:"annotations,omitempty"`
}

{{end}}

// ErrorResponse represents an error response
type ErrorResponse struct {
	Error   string `json:"error"`
	Message string `json:"message,omitempty"`
	Code    int    `json:"code,omitempty"`
}

// DeleteResponse represents a successful deletion response
type DeleteResponse struct {
	Message string `json:"message"`
	UID     string `json:"uid"`
}
